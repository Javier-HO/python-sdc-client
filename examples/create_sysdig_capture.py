#!/usr/bin/env python
#
# Runs a sysdig capture on a remote machine, waits for termination and then 
# downloads it to this machine.
# The capture can either be in the future (i.e. events generated by the target 
# machine from now on) or, if duration_past is specified and memory dump is 
# enabled on the target machine, in the past.
#

import os
import sys
import time
import requests
sys.path.insert(0, os.path.join(os.path.dirname(os.path.realpath(sys.argv[0])), '..'))
from sdcclient import SdcClient

#
# Parse arguments
#
if len(sys.argv) not in (6, 7):
    print 'usage: %s <sysdig-token> hostname capture_name duration_future [duration_past] [filter]' % sys.argv[0]
    print 'You can find your token at https://app.sysdigcloud.com/#/settings/user'
    sys.exit(1)

sdc_token = sys.argv[1]
hostname = sys.argv[2]
capture_name = sys.argv[3]
duration = sys.argv[4]

duration_past = 0
if len(sys.argv) > 5:
    duration_past = sys.argv[5]

capture_filter = ''
if len(sys.argv) > 6:
    capture_filter = sys.argv[6]

#
# Instantiate the SDC client
#
sdclient = SdcClient(sdc_token)

#
# Perform the capture
#
res = sdclient.create_sysdig_capture(hostname, capture_name, int(duration), capture_filter, duration_past=int(duration_past))

if res[0]:
    capture = res[1]['dump']
else:
    print res[1]
    sys.exit(1)

#
# Wait until the capture is finished
#
while True:
    res = sdclient.poll_sysdig_capture(capture)

    if res[0]:
        capture = res[1]['dump']
    else:
        print res[1]
        sys.exit(1)

    print 'Capture is in state ' + capture['status']
    if capture['status'] in ('requested', 'capturing', 'uploading'):
        pass
    elif capture['status'] in ('error', 'uploadingError'):
        print 'error: ' + capture['error']
        sys.exit(1)
    elif capture['status'] in ('done', 'uploaded'):
        break
    time.sleep(1)

#
# Download the capture to the local machine
#
res = sdclient.download_sysdig_capture(capture['id'])
if res[0]:
    print 'Capture downloaded. Filename: ' + res[1]
else:
    print res[1]
